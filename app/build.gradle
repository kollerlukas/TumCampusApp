plugins {
    id 'io.gitlab.arturbosch.detekt' version "1.0.0.RC6-4"
    id 'de.aaschmid.cpd' version '1.0'
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: '../gradle/scripts/findbugs.gradle'
apply from: '../gradle/scripts/pmd.gradle'
apply from: '../gradle/scripts/jacoco.gradle'
apply from: '../gradle/scripts/checkstyle.gradle'
apply from: '../gradle/scripts/detekt.gradle'
apply from: '../gradle/scripts/testLogging.gradle'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    buildTypes {
        all {
            proguardFiles(file('../proguard').listFiles())
            proguardFile getDefaultProguardFile('proguard-android.txt')
            minifyEnabled true
            shrinkResources true
            useProguard true
        }
        release.debuggable false
        debug {
            debuggable true
            testCoverageEnabled true
        }
    }
    defaultConfig {
        applicationId "de.tum.in.tumcampus"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 545
        versionName "2.0-dev"
        kapt.arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }
    lintOptions {
        checkAllWarnings true
        htmlReport false
        abortOnError false
        lintConfig new File("gradle/config/lint.xml")
        disable 'GoogleAppIndexingWarning',
                'TrulyRandom',
                'ContentDescription',
                'UnusedIds',
                'UnusedResources',    // unused resources get purged by shrinkResources
                'SelectableText'      // disabled by default
    }
    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            setIgnoreFailures(true)
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/src/test/java".toString())
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    dataBinding {
        enabled = true
    }
}

def androidSupportVersion = '27.1.1'
def retrofitVersion = '2.3.0'
def tikXmlVersion='0.8.13'

configurations.all {
    resolutionStrategy {
        force "com.android.support:exifinterface:$androidSupportVersion"
        force 'com.google.code.findbugs:jsr305:3.0.2'
    }
}

dependencies {

    // Support Libraries
    implementation "com.android.support:cardview-v7:$androidSupportVersion"
    implementation "com.android.support:design:$androidSupportVersion"
    implementation "com.android.support:preference-v7:$androidSupportVersion"
    implementation "com.android.support:preference-v14:$androidSupportVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.google.guava:guava:26.0-android'

    // Android arch components
    implementation 'android.arch.persistence.room:rxjava2:1.1.1'
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    implementation 'android.arch.lifecycle:runtime:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    kapt 'android.arch.lifecycle:compiler:1.1.1'
    kapt 'android.arch.persistence.room:compiler:1.1.1'


    // Play services
    implementation 'com.google.android.gms:play-services-base:15.0.1'
    implementation 'com.google.android.gms:play-services-location:15.0.1'

    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-messaging:17.3.0'
    releaseImplementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'

    // Helpers
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'net.danlew:android.joda:2.9.9.4'

    // XML Parsing
    implementation "com.tickaroo.tikxml:annotation:$tikXmlVersion"
    implementation "com.tickaroo.tikxml:core:$tikXmlVersion"
    kapt "com.tickaroo.tikxml:processor:$tikXmlVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko:0.10.5"

    // RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.2.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'

    // Transport
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation "com.tickaroo.tikxml:retrofit-converter:$tikXmlVersion"
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'

    // UI
    implementation 'se.emilsjolander:stickylistheaders:2.7.0'
    implementation 'com.github.chrisbanes:PhotoView:2.1.4'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.3'
    implementation 'com.github.quivr:android-week-view:2.3.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    // DB Debugging: adb forward tcp:8080 tcp:8080 - look for DebugDB in logcat
    // debugImplementation 'com.amitshekhar.android:debug-db:1.0.3'

    // Used for testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.21.0'
    testImplementation 'org.assertj:assertj-core:3.10.0'
    testImplementation 'android.arch.persistence.room:testing:1.1.1'
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

apply plugin: 'com.google.gms.google-services'
